openapi: 3.0.0
info:
  title: Customer API
  version: 1.0.0
  description: API for managing customers. Reto Backend CP.
  contact:
    name: No0dl3 Support
    url: https://github.com/byNo0dle
servers:
  - url: http://localhost:9003/api/customers
    description: Customer Api
paths:
  get:
    tags:
      - Customer
    summary: Find all Customers
    operationId: findAllCustomer
    responses:
      '200':
        description: List of Customers retrieved successfully
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Customer'
      '400':
        description: Bad Request invalid syntax
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerError'
      '404':
        description: Not Found Customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerError'
  post:
    tags:
      - Customer
    summary: Add a new Customer
    description: Add a new Customer
    operationId: saveCustomer
    requestBody:
      description: Create a new Customer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
      required: true
    responses:
      '200':
        description: Successful operation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      '400':
        description: Bad Request invalid syntax
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerError'
      '404':
        description: Not Found Customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerError'
              
  /{idCustomer}:
    get:
      tags:
        - Customer
      summary: Find Customer by ID
      description: Returns a single Customer
      operationId: findByIdCustomer
      parameters:
        - name: id
          in: path
          description: ID of Customer to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Bad Request invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerError'
        '404':
          description: Not Found Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerError'

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: string
          example: 65xd2dx0x7d11d2x20827638
        nameCustomer:
          type: string
          minLength: 3
          maxLength: 20
          example: Piero Rogelio
        surnames:
          type: string
          minLength: 10
          maxLength: 20
          example: Ahuanari Sangama
        address:
          type: string
          minLength: 10
          maxLength: 40
          example: Jr. Puerto Maldonado 130
    CustomerError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message